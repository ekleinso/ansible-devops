apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-monitoring-config
  namespace: openshift-monitoring
data:
  config.yaml: |
    prometheusK8s:
      retention: {{ prometheus_retention_period }}
{% if monitoring_use_infra %}
      nodeSelector:
        node-role.kubernetes.io/infra: ""
{% endif %}
      volumeClaimTemplate:
        metadata:
          name: prometheus-pvc
        spec:
{% if prometheus_storage_class is defined %}
          storageClassName: {{ prometheus_storage_class }}
{% endif %}
          resources:
            requests:
              storage: {{ prometheus_storage_size }}
    alertmanagerMain:
{% if monitoring_use_infra %}
      nodeSelector:
        node-role.kubernetes.io/infra: ""
{% endif %}
      volumeClaimTemplate:
        metadata:
          name: alertmanager-pvc
        spec:
{% if alertmanager_storage_class is defined %}
          storageClassName: {{ alertmanager_storage_class }}
{% endif %}
          resources:
            requests:
              storage: {{ alertmanager_storage_size }}
    kubeStateMetrics:
{% if monitoring_use_infra %}
      nodeSelector:
        node-role.kubernetes.io/infra: ""
{% endif %}
    grafana:
{% if monitoring_use_infra %}
      nodeSelector:
        node-role.kubernetes.io/infra: ""
{% endif %}
    k8sPrometheusAdapter:
{% if monitoring_use_infra %}
      nodeSelector:
        node-role.kubernetes.io/infra: ""
{% endif %}
    openshiftStateMetrics:
{% if monitoring_use_infra %}
      nodeSelector:
        node-role.kubernetes.io/infra: ""
{% endif %}
    thanosQuerier:
{% if monitoring_use_infra %}
      nodeSelector:
        node-role.kubernetes.io/infra: ""
{% endif %}
    telemeterClient:
      enabled: true
{% if monitoring_use_infra %}
      nodeSelector:
        node-role.kubernetes.io/infra: ""
{% endif %}