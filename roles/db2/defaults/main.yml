---
# Configure Db2 instance
# -----------------------------------------------------------------------------------------------------------------
db2_namespace: "{{ lookup('env', 'DB2_NAMESPACE') | default('db2u', true) }}"

db2_instance_name: "{{ lookup('env', 'DB2_INSTANCE_NAME') }}" # e.g. db2u-iot or db2u-manage
db2_dbname: "{{ lookup('env', 'DB2_DBNAME') | default('BLUDB', true) }}"
db2_version: "{{ lookup('env', 'DB2_VERSION') | default('11.5.7.0-cn4', true)}}"
db2_jdbc_username: db2inst1

db2_table_org: "{{ lookup('env', 'DB2_TABLE_ORG') | default('ROW', true) }}" # e.g ROW or COLUMN

# If storage class is OCS or PortWorx then 4k device support should be ON
db2_4k_device_support: "{{ lookup('env', 'DB2_4K_DEVICE_SUPPORT') | default('ON', true) }}"

db2_node_label: "{{ lookup('env', 'DB2_NODE_LABEL') | default(None, true) }}" # by default there is no node affinity/tolerations
db2_dedicated_node: "{{ lookup('env', 'DB2_DEDICATED_NODE') | default(None, true) }}" # by default there is no dedicated node
db2_workload: "{{ lookup('env', 'DB2_WORKLOAD') | default('ANALYTICS', true) }}" # default workload is ANALYTICS, other option is PUREDATA_OLAP

# Support DB2 MPP configurations
db2_mln_count: "{{ lookup('env', 'DB2_MLN_COUNT') | default(1, true) }}" # by default only specify one logical node (i.e. one db partition)
db2_num_pods: "{{ lookup('env', 'DB2_NUM_PODS') | default(1, true) }}" # by default only specify one db2 pod

# Configure meta storage for db2u
db2_meta_storage_class: "{{ lookup('env', 'DB2_META_STORAGE_CLASS') }}"
db2_meta_storage_size: "{{ lookup('env', 'DB2_META_STORAGE_SIZE') | default('20Gi', true) }}"
db2_meta_storage_accessmode: "{{ lookup('env', 'DB2_META_STORAGE_ACCESSMODE') | default('ReadWriteMany', true) }}"

# Configure data storage for db2u
db2_data_storage_class: "{{ lookup('env', 'DB2_DATA_STORAGE_CLASS') }}"
db2_data_storage_size: "{{ lookup('env', 'DB2_DATA_STORAGE_SIZE') | default('100Gi', true) }}"
db2_data_storage_accessmode: "{{ lookup('env', 'DB2_DATA_STORAGE_ACCESSMODE') | default('ReadWriteOnce', true) }}"

# Configure backup storage for db2u
db2_backup_storage_class: "{{ lookup('env', 'DB2_BACKUP_STORAGE_CLASS') }}"
db2_backup_storage_size: "{{ lookup('env', 'DB2_BACKUP_STORAGE_SIZE') | default('100Gi', true) }}"
db2_backup_storage_accessmode: "{{ lookup('env', 'DB2_BACKUP_STORAGE_ACCESSMODE') | default('ReadWriteMany', true) }}"

# Configure transaction logs storage for db2u
db2_logs_storage_class: "{{ lookup('env', 'DB2_LOGS_STORAGE_CLASS') }}"
db2_logs_storage_size: "{{ lookup('env', 'DB2_LOGS_STORAGE_SIZE') | default('100Gi', true) }}"
db2_logs_storage_accessmode: "{{ lookup('env', 'DB2_LOGS_STORAGE_ACCESSMODE') | default('ReadWriteOnce', true) }}"

# Configure temp storage for db2u
db2_temp_storage_class: "{{ lookup('env', 'DB2_TEMP_STORAGE_CLASS') }}"
db2_temp_storage_size: "{{ lookup('env', 'DB2_TEMP_STORAGE_SIZE') | default('100Gi', true) }}"
db2_temp_storage_accessmode: "{{ lookup('env', 'DB2_TEMP_STORAGE_ACCESSMODE') | default('ReadWriteOnce', true) }}"

# Request/limit defaults
# -----------------------------------------------------------------------------------------------------------------
db2_cpu_requests: "{{ lookup('env', 'DB2_CPU_REQUESTS')  | default('2000m', true) }}"
db2_cpu_limits: "{{ lookup('env', 'DB2_CPU_LIMITS')  | default('4000m', true) }}"
db2_memory_requests: "{{ lookup('env', 'DB2_MEMORY_REQUESTS')  | default('6Gi', true) }}"
db2_memory_limits: "{{ lookup('env', 'DB2_MEMORY_LIMITS')  | default('12Gi', true) }}"

# Entitlement
# -----------------------------------------------------------------------------------------------------------------
registry: cp.icr.io
registry_user: cp

ibm_entitlement_key: "{{ lookup('env', 'IBM_ENTITLEMENT_KEY') }}"
# We support ENTITLEMENT_KEY for backwards compatability with previous releases
db2_entitlement_key: "{{ lookup('env', 'DB2_ENTITLEMENT_KEY') | default(ibm_entitlement_key, true) | default(lookup('env', 'ENTITLEMENT_KEY'), true) }}"
