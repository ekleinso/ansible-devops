- name: Gather all the MCG Nodes
  k8s_info:
    kind: Node
    label_selectors:
      - "node-role.kubernetes.io/worker"
  register: mcg_nodes

- name: Add storage label to MCG nodes
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Node
      metadata:
        name: "{{ item.metadata.name }}"
        labels:
          cluster.ocs.openshift.io/openshift-storage: ""
  when:
    - item["metadata"]["labels"]["cluster.ocs.openshift.io/openshift-storage"] is not defined and
      item["spec"]["taints"] is not defined
  loop_control:
    label: "{{ item.metadata.name }}"
  loop: "{{ mcg_nodes.resources }}"

- name: Create the StorageCluster object
  k8s:
    state: present
    definition: "{{ lookup('template', 'mcg-standalone.j2') }}"
    wait: true
    wait_sleep: 10
    wait_timeout: 600
    wait_condition:
      type: Available
      status: "True"

- name: Wait for nooba backing store
  k8s_info:
    api_version: noobaa.io/v1alpha1
    kind: BackingStore
    namespace: openshift-storage
    name: noobaa-default-backing-store
    wait: yes
    wait_sleep: 10
    wait_timeout: 360
  register: reg_nooba_status
  until: reg_nooba_status.resources[0].status.phase is defined and reg_nooba_status.resources[0].status.phase == "Ready" 
  retries: 20 # wait for 10 minutes (20 retries x 30 sec = 600 sec)
  delay: 30

- name: Patch resources for backing store
  kubernetes.core.k8s_json_patch:
    api_version: noobaa.io/v1alpha1
    kind: BackingStore
    namespace: openshift-storage
    name: noobaa-default-backing-store
    patch:
      - op: add
        path: /spec/pvPool/resources/limits
        value: {"cpu":"1000m","memory":"4000Mi"}
  when:
    - reg_nooba_status.resources[0].status.phase is defined
    - reg_nooba_status.resources[0].status.phase == "Ready"